datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  password String
  User     User?   @relation(fields: [userId], references: [id])
  userId   String? @db.ObjectId
}

model User {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  email          String           @unique
  name           String
  image          String
  phone          String
  About          About            @relation(fields: [aboutId], references: [id])
  Address        Address          @relation(fields: [addressId], references: [id])
  Social         Social[]
  Skill          Skill[]
  Education      Education[]
  Project        Project[]
  WorkExperience WorkExperience[]
  aboutId        String           @db.ObjectId
  addressId      String           @db.ObjectId
  Account        Account[]
}

model About {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  heroText String[]
  title    String
  bio      String
  about    String
  User     User[]
}

model Address {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  street String
  city   String
  state  String
  zip    String
  User   User[]
}

model Skill {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  src         String
  proficiency String
  User        User   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
}

model Education {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  school      String
  degree      String
  field       String?
  startYear   String
  endYear     String
  description String
  User        User    @relation(fields: [userId], references: [id])
  userId      String  @db.ObjectId
}

model Project {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  link        String
  User        User   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
}

model WorkExperience {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  company     String
  position    String
  startYear   String
  endYear     String
  description String?
  User        User    @relation(fields: [userId], references: [id])
  userId      String  @db.ObjectId
}

model Social {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  href   String
  src    String
  alt    String
  User   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}
